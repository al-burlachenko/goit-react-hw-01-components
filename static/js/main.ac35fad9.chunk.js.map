{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.jsx","utils/colorRandomizer.js","components/Profile/Profile.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","stats","title","className","s","statistics","statList","map","stat","item","style","backgroundColor","Math","random","toString","substring","toUpperCase","label","percentage","id","Profile","props","profile","description","src","avatar","alt","name","username","tag","location","quantity","followers","views","likes","FriendList","friends","friendList","friend","status","isOnline","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","userInfo","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac35fad9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__25lyF\",\"description\":\"Profile_description__27gJF\",\"avatar\":\"Profile_avatar__2ucaD\",\"name\":\"Profile_name__1CQrw\",\"tag\":\"Profile_tag__1grw_\",\"location\":\"Profile_location__1nw2X\",\"stats\":\"Profile_stats__3LykA\",\"label\":\"Profile_label__3sk7v\",\"quantity\":\"Profile_quantity__3NGg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2yy5z\",\"label\":\"Statistics_label__Z8TcD\",\"percentage\":\"Statistics_percentage__1T_9L\",\"title\":\"Statistics_title__Cw6dN\",\"item\":\"Statistics_item__1ngrn\",\"statList\":\"Statistics_statList__wrG7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3uG9_\",\"item\":\"FriendList_item__1weos\",\"avatar\":\"FriendList_avatar__3vU63\",\"name\":\"FriendList_name__1HOt2\",\"status\":\"FriendList_status__170Q4\",\"true\":\"FriendList_true__P9LhL\",\"false\":\"FriendList_false__ySe5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3Du-b\"};","import s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport randomColor from '../../utils/colorRandomizer';\r\n\r\nexport default function Statistics({ stats, title }) {\r\n  return (\r\n    <section className={s.statistics}>\r\n      <h2 className={s.title}>{title}</h2>\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(stat => (\r\n          <li\r\n            className={s.item}\r\n            style={{ backgroundColor: randomColor() }}\r\n            key={stat.id}\r\n          >\r\n            {/* <StatisticsData label={stat.label} percentage={stat.percentage} /> */}\r\n            <span className={s.label}>{stat.label}</span>\r\n            <span className={s.percentage}>{stat.percentage} %</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n      id: PropTypes.string,\r\n    }).isRequired,\r\n  ),\r\n  title: PropTypes.string,\r\n};\r\n","export default function randomColor() {\n  return (\n    '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase()\n  );\n}\n","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nexport default function Profile(props) {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={props.avatar} alt=\"User avatar\" className={s.avatar} />\r\n        <p className={s.name}>{props.username}</p>\r\n        <p className={s.tag}>{props.tag}</p>\r\n        <p className={s.location}>{props.location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{props.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{props.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{props.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import s from './FriendList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {friends.map(friend => (\r\n        <li className={s.item} key={friend.id}>\r\n          <span className={`${s.status} ${s[friend.isOnline]}`}></span>\r\n          <img\r\n            className={s.avatar}\r\n            src={friend.avatar}\r\n            alt=\"User avatar\"\r\n            width=\"48\"\r\n          />\r\n          <p className={s.name}>{friend.name}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  id: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n","import s from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","// import Profile from '../Profile/Profile';\nimport userInfo from '../../data/user.json';\nimport data from '../../data/data.json';\nimport friends from '../../data/friends.json';\nimport transactions from '../../data/transactions.json';\n\nimport Statistics from '../Statistics/Statistics';\nimport Profile from '../Profile/Profile';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        username={userInfo.username}\n        tag={userInfo.tag}\n        location={userInfo.location}\n        avatar={userInfo.avatar}\n        stats={userInfo.stats}\n        followers={userInfo.stats.followers}\n        views={userInfo.stats.views}\n        likes={userInfo.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}