{"version":3,"sources":["components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","utils/colorRandomizer.js","components/Profile/Profile.styled.js","components/Profile/Profile.jsx","components/FriendList/FriendList.styled.js","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.jsx","components/App/App.styled.js","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["StatisticsSection","styled","section","Title","h2","StatList","ul","Item","li","Label","span","Percentage","Statistics","stats","title","map","id","label","percentage","style","backgroundColor","Math","random","toString","substring","toUpperCase","ProfileContatner","div","Description","Avatar","img","Name","p","Tag","Location","Stats","Items","Quantity","Profile","props","avatar","username","tag","location","followers","views","likes","src","alt","List","Status","isOnline","FriendList","friends","name","width","TransactionContainer","table","TransactionHeader","th","TransactionData","td","TransactionRow","tr","TransactionHistory","items","type","amount","currency","Container","App","userInfo","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94d385e8.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const StatisticsSection = styled.section`\n  margin-bottom: 20px;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0px;\n`;\nexport const StatList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n\n  padding: 10px;\n`;\nexport const Label = styled.span`\n  text-align: center;\n  margin-bottom: 10px;\n`;\nexport const Percentage = styled.span`\n  text-align: center;\n  font-size: larger;\n`;\n","import PropTypes from 'prop-types';\r\nimport {\r\n  StatisticsSection,\r\n  Title,\r\n  StatList,\r\n  Item,\r\n  Label,\r\n  Percentage,\r\n} from './Statistics.styled';\r\nimport randomColor from '../../utils/colorRandomizer';\r\n\r\nexport default function Statistics({ stats, title }) {\r\n  return (\r\n    <StatisticsSection>\r\n      <Title>{title}</Title>\r\n\r\n      <StatList>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <Item style={{ backgroundColor: randomColor() }} key={id}>\r\n            <Label>{label}</Label>\r\n            <Percentage>{percentage} %</Percentage>\r\n          </Item>\r\n        ))}\r\n      </StatList>\r\n    </StatisticsSection>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n      id: PropTypes.string,\r\n    }).isRequired,\r\n  ),\r\n  title: PropTypes.string,\r\n};\r\n","export default function randomColor() {\n  return (\n    '#' + (Math.random().toString(16) + '000000').substring(2, 8).toUpperCase()\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ProfileContatner = styled.div`\n  width: 300px;\n  padding: 10px 0px 0px 0px;\n  margin-bottom: 20px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Avatar = styled.img`\n  width: 200px;\n  border-radius: 50% 50%;\n`;\nexport const Name = styled.p`\n  margin-bottom: 5px;\n`;\nexport const Tag = styled.p`\n  margin-bottom: 5px;\n`;\nexport const Location = styled.p`\n  margin-bottom: 20px;\n`;\nexport const Stats = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  border-top: 1px solid rgba(34, 60, 80, 0.2);\n`;\nexport const Items = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  border-right: 1px solid rgba(34, 60, 80, 0.2);\n  &: last-of-type {\n    border-right: none;\n  }\n`;\nexport const Label = styled.span`\n  text-align: center;\n`;\nexport const Quantity = styled.span`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\r\nimport {\r\n  ProfileContatner,\r\n  Description,\r\n  Avatar,\r\n  Name,\r\n  Tag,\r\n  Location,\r\n  Stats,\r\n  Items,\r\n  Label,\r\n  Quantity,\r\n} from './Profile.styled';\r\n\r\nexport default function Profile(props) {\r\n  const { avatar, username, tag, location, followers, views, likes } = props;\r\n  return (\r\n    <ProfileContatner>\r\n      <Description>\r\n        <Avatar src={avatar} alt=\"User avatar\" />\r\n        <Name>{username}</Name>\r\n        <Tag>@{tag}</Tag>\r\n        <Location>{location}</Location>\r\n      </Description>\r\n\r\n      <Stats>\r\n        <Items>\r\n          <Label>Followers</Label>\r\n          <Quantity>{followers}</Quantity>\r\n        </Items>\r\n        <Items>\r\n          <Label>Views</Label>\r\n          <Quantity>{views}</Quantity>\r\n        </Items>\r\n        <Items>\r\n          <Label>Likes</Label>\r\n          <Quantity>{likes}</Quantity>\r\n        </Items>\r\n      </Stats>\r\n    </ProfileContatner>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 10px;\n\n  padding: 10px;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 10px;\n  margin-left: 20px;\n`;\n\nexport const Name = styled.p`\n  margin-left: 20px;\n  font-weight: bolder;\n`;\n\nexport const Status = styled.span`\n  border-radius: 100%;\n  width: 20px;\n  height: 20px;\n  background-color: ${({ isOnline }) =>\n    isOnline ? 'rgb(0, 131, 0)' : 'rgb(255, 0, 0)'}};\n`;\n","import PropTypes from 'prop-types';\r\nimport { List, Item, Avatar, Name, Status } from './FriendList.styled';\r\n\r\nexport default function FriendList({ friends }) {\r\n  return (\r\n    <List>\r\n      {friends.map(({ id, isOnline, avatar, name }) => (\r\n        <Item key={id}>\r\n          <Status isOnline={isOnline} />\r\n          <Avatar src={avatar} alt=\"User avatar\" width=\"48\" />\r\n          <Name>{name}</Name>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  id: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const TransactionContainer = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  -webkit-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  -moz-box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\n`;\n\nexport const TransactionHeader = styled.th`\n  background-color: rgb(17, 136, 172);\n  padding: 10px;\n\n  text-align: center;\n\n  &:nth-of-type(2n) {\n    border-left: solid 1px #eee7e7;\n    border-right: solid 1px #eee7e7;\n  }\n`;\n\nexport const TransactionData = styled.td`\n  padding: 10px;\n\n  text-align: center;\n\n  &:nth-of-type(2n) {\n    border-left: solid 1px #eee7e7;\n    border-right: solid 1px #eee7e7;\n  }\n`;\n\nexport const TransactionRow = styled.tr`\n  &: nth-of-type(2n) {\n    background-color: rgb(240, 240, 240);\n  }\n`;\n","import PropTypes from 'prop-types';\r\nimport {\r\n  TransactionContainer,\r\n  TransactionHeader,\r\n  TransactionData,\r\n  TransactionRow,\r\n} from './TransactionHistory.styled';\r\n\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <TransactionContainer>\r\n      <thead>\r\n        <tr>\r\n          <TransactionHeader>Type</TransactionHeader>\r\n          <TransactionHeader>Amount</TransactionHeader>\r\n          <TransactionHeader>Currency</TransactionHeader>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <TransactionRow key={id}>\r\n            <TransactionData>{type}</TransactionData>\r\n            <TransactionData>{amount}</TransactionData>\r\n            <TransactionData>{currency}</TransactionData>\r\n          </TransactionRow>\r\n        ))}\r\n      </tbody>\r\n    </TransactionContainer>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import styled from '@emotion/styled';\nexport const Container = styled.div`\n  padding: 50px;\n`;\n","import userInfo from '../../data/user.json';\nimport data from '../../data/data.json';\nimport friends from '../../data/friends.json';\nimport transactions from '../../data/transactions.json';\n\nimport Statistics from '../Statistics/Statistics';\nimport Profile from '../Profile/Profile';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nimport { Container } from './App.styled';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        username={userInfo.username}\n        tag={userInfo.tag}\n        location={userInfo.location}\n        avatar={userInfo.avatar}\n        stats={userInfo.stats}\n        followers={userInfo.stats.followers}\n        views={userInfo.stats.views}\n        likes={userInfo.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}